/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI_taller3;

import java.sql.*;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
/**
 *
 * 
 * @author raul1
 */

public class Maria_Pan_GUI extends javax.swing.JFrame {
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel modeloInventario = new DefaultTableModel();
     DefaultListModel<String> listModel = new DefaultListModel<>();
     DefaultListModel<String> listModel2 = new DefaultListModel<>();



    
    /**
     * Creates new form Maria_Pan_GUI
     */  
    ArrayList<Integer> listaDeCompra = new ArrayList<>();
    ArrayList<Integer> listaDeCantidad = new ArrayList<>();
    ArrayList<Integer> idProducto = new ArrayList<>();
    ArrayList<String> nombreProducto = new ArrayList<>();
    ArrayList<Float> precioProducto = new ArrayList<>();
    ArrayList<Integer> cantidadProducto = new ArrayList<>();
    float total;
    String sucursal="San Mateo";



    String url = "jdbc:mysql://localhost:3306/mariapan";
            String user="root";
            String pass="";
    public Maria_Pan_GUI() {
        initComponents(); 
        
            }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JTabbedPane();
        ventas = new javax.swing.JPanel();
        producto = new javax.swing.JLabel();
        cantidad = new javax.swing.JLabel();
        cant = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_compra = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        total_field = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        facturar = new javax.swing.JButton();
        dropdown_producto = new javax.swing.JComboBox<>();
        facturas = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        lista_facs = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        inventario = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_inv = new javax.swing.JTable();
        proveedores = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        prov_list = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabla_prod = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menu.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                menuStateChanged(evt);
            }
        });
        menu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                menuKeyPressed(evt);
            }
        });

        ventas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ventasMouseClicked(evt);
            }
        });

        producto.setText("Producto:");

        cantidad.setText("Cantidad");

        cant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantActionPerformed(evt);
            }
        });

        add.setText("Añadir");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        tabla_compra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio", "Cantidad"
            }
        ));
        jScrollPane1.setViewportView(tabla_compra);

        jLabel1.setText("Total:");

        total_field.setEditable(false);
        total_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_fieldActionPerformed(evt);
            }
        });

        delete.setText("Borrar Artículo");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        facturar.setText("Facturar");
        facturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ventasLayout = new javax.swing.GroupLayout(ventas);
        ventas.setLayout(ventasLayout);
        ventasLayout.setHorizontalGroup(
            ventasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ventasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ventasLayout.createSequentialGroup()
                        .addComponent(dropdown_producto, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(cant, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(add))
                    .addGroup(ventasLayout.createSequentialGroup()
                        .addComponent(producto)
                        .addGap(80, 80, 80)
                        .addComponent(cantidad))
                    .addGroup(ventasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ventasLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(total_field, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delete))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(facturar))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        ventasLayout.setVerticalGroup(
            ventasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventasLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(ventasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(producto)
                    .addComponent(cantidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ventasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add)
                    .addComponent(dropdown_producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ventasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(total_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(facturar)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        menu.addTab("Ventas", ventas);

        facturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                facturasMouseClicked(evt);
            }
        });

        jLabel2.setText("Ventas");

        lista_facs.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(lista_facs);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sucursal", "Total", "Productos"
            }
        ));
        jScrollPane5.setViewportView(jTable1);

        javax.swing.GroupLayout facturasLayout = new javax.swing.GroupLayout(facturas);
        facturas.setLayout(facturasLayout);
        facturasLayout.setHorizontalGroup(
            facturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facturasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(facturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        facturasLayout.setVerticalGroup(
            facturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facturasLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(facturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        menu.addTab("Facturas", facturas);

        inventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventarioMouseClicked(evt);
            }
        });

        tabla_inv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "En Inventario"
            }
        ));
        jScrollPane3.setViewportView(tabla_inv);

        javax.swing.GroupLayout inventarioLayout = new javax.swing.GroupLayout(inventario);
        inventario.setLayout(inventarioLayout);
        inventarioLayout.setHorizontalGroup(
            inventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addContainerGap())
        );
        inventarioLayout.setVerticalGroup(
            inventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addContainerGap())
        );

        menu.addTab("Inventario", inventario);

        proveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proveedoresMouseClicked(evt);
            }
        });

        jLabel3.setText("Proveedor:");

        prov_list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(prov_list);

        tabla_prod.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Productos"
            }
        ));
        jScrollPane7.setViewportView(tabla_prod);

        javax.swing.GroupLayout proveedoresLayout = new javax.swing.GroupLayout(proveedores);
        proveedores.setLayout(proveedoresLayout);
        proveedoresLayout.setHorizontalGroup(
            proveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, proveedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(proveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        proveedoresLayout.setVerticalGroup(
            proveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proveedoresLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(proveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        menu.addTab("Proveedores", proveedores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void cantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantActionPerformed
//**accion del boton**
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String name = dropdown_producto.getSelectedItem().toString();
  
        try {
            int cantidadComprar=Integer.parseInt(cant.getText());

                    //no tengo idea de que estoy haciendo hermano, necesito dormir
                int index = nombreProducto.indexOf(name);
             

                    if (listaDeCompra.contains(idProducto.get(index))) {
                        JOptionPane.showMessageDialog(ventas, "Ya agrego ese producto a su carrito","Error" , JOptionPane.ERROR_MESSAGE);
                        
                    } else {
                        if (cantidadComprar<=cantidadProducto.get(index)) {
                            listaDeCompra.add(idProducto.get(index));
                            listaDeCantidad.add(cantidadComprar);
                            modelo.addRow(new Object[]{nombreProducto.get(index),String.format("%.2f",precioProducto.get(index)),cantidadComprar,String.format("%.2f",precioProducto.get(index)*cantidadComprar)});
                            total+=precioProducto.get(index)*cantidadComprar;
                            total_field.setText(String.format("%.2f", total));
                            
                        } else {
                            JOptionPane.showMessageDialog(ventas, "Esta comprando más de lo que hay en inventario","Error" , JOptionPane.ERROR_MESSAGE);
                        }
                
                    }
           
        } catch (Exception e) {
            // TODO: handle exception
            JOptionPane.showMessageDialog(ventas, "Introduzca un número","Error" , JOptionPane.ERROR_MESSAGE);
    
        }
    }//GEN-LAST:event_addActionPerformed

    private void total_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_total_fieldActionPerformed
//**Aqui esto es el boton facturar**
    private void facturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturarActionPerformed
        // TODO add your handling code here:

        String query = "INSERT INTO facturas (sucursal, total) VALUES (?, ?)";

        try {
            // 1. Establecer la conexión
            Connection conexion = DriverManager.getConnection(url, user, pass);

            // 2. Preparar la sentencia SQL
            PreparedStatement stmt = conexion.prepareStatement(query, PreparedStatement.RETURN_GENERATED_KEYS);
            stmt.setString(1, sucursal);  // El primer parámetro es el nombre
            stmt.setFloat(2, total);  // El segundo parámetro es el email

            // 3. Ejecutar la inserción
            int filasAfectadas = stmt.executeUpdate();

            // Verificar si la inserción fue exitosa
            if (filasAfectadas > 0) {
                ResultSet generatedKeys = stmt.getGeneratedKeys();
                if (generatedKeys.next()) {
                    long idGenerado = generatedKeys.getLong(1);  // Obtener el ID de la primera columna
                    System.out.println("Inserción realizada correctamente. ID generado: " + idGenerado);
                }
                String query2 = "INSERT INTO producto_factura (id_factura, id_producto, cantidad) VALUES (?, ?, ?)";
                String query3 = "UPDATE productos SET cantidad = ? WHERE id = ?";                
                for (int i = 0; i < listaDeCompra.size(); i++) {
                    PreparedStatement stmt2 = conexion.prepareStatement(query2);
                    PreparedStatement stmt3 = conexion.prepareStatement(query3);
                    stmt2.setInt(1,  generatedKeys.getInt(1));  
                    stmt2.setInt(2, listaDeCompra.get(i)); 
                    stmt2.setInt(3, listaDeCantidad.get(i)); 
                    stmt3.setInt(1, cantidadProducto.get(idProducto.indexOf((listaDeCompra.get(i))))-listaDeCantidad.get(i)); 
                    stmt3.setInt(2, listaDeCompra.get(i)); 
                    stmt2.executeUpdate();
                    stmt3.executeUpdate();
                }

            }

            // 4. Cerrar la conexión
            stmt.close();
            conexion.close();
            clean();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        System.out.println("La lista está conformada por: "+ listaDeCompra);
    }//GEN-LAST:event_facturarActionPerformed
//**Aqui esta el boton de borrar**
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int seleccionado = tabla_compra.getSelectedRow();
        total-=(listaDeCantidad.get(seleccionado)*precioProducto.get(idProducto.indexOf((listaDeCompra.get(seleccionado)))));
        listaDeCantidad.remove(seleccionado);
        listaDeCompra.remove(seleccionado);
       modelo.removeRow(seleccionado);
       total_field.setText(String.format("%.2f", total));
    }//GEN-LAST:event_deleteActionPerformed
//**aqui cuando hago click **
    private void menuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuKeyPressed
//**aqui cuando cambia **

    private  void clean() {
        listaDeCompra.clear();
        listaDeCantidad.clear();
        idProducto.clear();
        
        idProducto.clear();
        nombreProducto.clear();
        precioProducto.clear();
        cantidadProducto.clear();

        cant.setText("");
        total_field.setText("0.00");

        dropdown_producto.removeAllItems();

        String column[]={"Producto","Precio por unidad","Cantidad", "Precio"};
        modelo.setColumnIdentifiers(column);
        modelo.setRowCount(0);
        tabla_compra.setModel(modelo);
        try{           
            Connection con= DriverManager.getConnection(url, user, pass);
            String query = "SELECT * FROM productos;";
            PreparedStatement ps=con.prepareStatement(query);
            ResultSet rs= ps.executeQuery(query);
            while(rs.next()){
                idProducto.add(rs.getInt("id"));
                nombreProducto.add(rs.getString("nombre"));
                precioProducto.add(rs.getFloat("precio"));
                cantidadProducto.add(rs.getInt("cantidad"));
                String nombre = rs.getString("nombre");
                dropdown_producto.addItem(nombre);
            }
            
            
                
            
        }catch(Exception e){
            
        }
        
    }
    private void menuStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_menuStateChanged
        // TODO add your handling code here:
          int selectedIndex = menu.getSelectedIndex();
        
          switch (selectedIndex) {
            case 0: //tab ventas
            clean();
                break;
            case 1: //tab facturas
            listModel.clear();
            lista_facs.setModel(listModel);
            lista_facs.setFixedCellWidth(35); 
            try{           
                Connection con= DriverManager.getConnection(url, user, pass);
                String query = "SELECT * FROM facturas;";
                PreparedStatement ps=con.prepareStatement(query);
                ResultSet rs= ps.executeQuery(query);
                while(rs.next()){
                    listModel.addElement(String.format("F %d",rs.getInt("id")));
                    
             
                }
                
                
                    
                
            }catch(Exception e){
                
            }
                break;
                case 2://tab inventario
                String column[]={"Nombre de Producto","Precio por unidad","Cantidad"};
                modeloInventario.setColumnIdentifiers(column);
                modeloInventario.setRowCount(0);
                tabla_inv.setModel(modeloInventario);
                try{           
                    Connection con= DriverManager.getConnection(url, user, pass);
                    String query = "SELECT * FROM productos;";
                    PreparedStatement ps=con.prepareStatement(query);
                    ResultSet rs= ps.executeQuery(query);
                    while(rs.next()){
                        modeloInventario.addRow(new Object[]{rs.getString("nombre"),String.format("%.2f", rs.getFloat("precio")),rs.getInt("cantidad")});
                        
                 
                    }
                    
                    
                        
                    
                }catch(Exception e){
                    
                }
                    break;
                    case 3://tab proveedores
                    listModel2.clear();
                    prov_list.setModel(listModel2);
                    prov_list.setFixedCellWidth(35); 
                    try{           
                        Connection con= DriverManager.getConnection(url, user, pass);
                        String query = "SELECT * FROM proveedor;";
                        PreparedStatement ps=con.prepareStatement(query);
                        ResultSet rs= ps.executeQuery(query);
                        while(rs.next()){
                            listModel2.addElement(rs.getString("nombre"));
                            
                     
                        }
                        
                        
                            
                        
                    }catch(Exception e){
                        
                    }
                        break;
            default:
                break;
        }

    }//GEN-LAST:event_menuStateChanged
//**cuando  clickea sobre ventas**
    private void ventasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ventasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ventasMouseClicked
//**cuando  clickea sobre facturas**
    private void facturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facturasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_facturasMouseClicked
//**cuando  clickea sobre inventario**
    private void inventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventarioMouseClicked
        // TODO add your handling code here:
      

    }//GEN-LAST:event_inventarioMouseClicked
//**cuando  clickea sobre proveedores**
    private void proveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proveedoresMouseClicked
        // TODO add your handling code here:
      
    }//GEN-LAST:event_proveedoresMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Maria_Pan_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Maria_Pan_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Maria_Pan_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Maria_Pan_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Maria_Pan_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField cant;
    private javax.swing.JLabel cantidad;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> dropdown_producto;
    private javax.swing.JButton facturar;
    private javax.swing.JPanel facturas;
    private javax.swing.JPanel inventario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> lista_facs;
    private javax.swing.JTabbedPane menu;
    private javax.swing.JLabel producto;
    private javax.swing.JList<String> prov_list;
    private javax.swing.JPanel proveedores;
    private javax.swing.JTable tabla_compra;
    private javax.swing.JTable tabla_inv;
    private javax.swing.JTable tabla_prod;
    private javax.swing.JTextField total_field;
    private javax.swing.JPanel ventas;
    // End of variables declaration//GEN-END:variables
}
